version: '3.8'

services:
  frontend:
    image: ${REGISTRY:-localhost}/smartzap-frontend:latest
    container_name: frontend_container
    networks:
      - smartzap_net
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
    volumes:
      - ./frontEnd/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certs:/etc/nginx/certs
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.smartzap-frontend.rule=Host(`app-dev.smartzap.net`)"
      - "traefik.http.routers.smartzap-frontend.tls=true"
      - "traefik.http.routers.smartzap-frontend.tls.certresolver=letsencrypt"

  backend:
    image: ${REGISTRY:-localhost}/smartzap-backend:latest
    container_name: backend_container
    networks:
      - smartzap_net
    expose:
      - "4000"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
    environment:
      - NODE_ENV=production
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.smartzap-backend.rule=Host(`app-dev.smartzap.net`) && PathPrefix(`/api`)"
      - "traefik.http.routers.smartzap-backend.tls=true"
      - "traefik.http.routers.smartzap-backend.tls.certresolver=letsencrypt"
      - "traefik.http.services.smartzap-backend.loadbalancer.server.port=4000"

networks:
  smartzap_net:
    driver: overlay
    attachable: true
